# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-12 08:02
from __future__ import unicode_literals

import django.contrib.auth.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=50, unique=True, verbose_name='username')),
                ('email', models.EmailField(blank=True, db_index=True, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('iaccesslevel', models.SmallIntegerField(verbose_name='iaccesslevel')),
                ('ip', models.CharField(blank=True, max_length=20, verbose_name='ip')),
                ('itopupaccesslevel', models.SmallIntegerField(null=True, verbose_name='itopupaccesslevel')),
                ('twholesaler', models.CharField(max_length=50, verbose_name='twholesaler')),
                ('featureflag', models.CharField(blank=True, max_length=20, null=True, verbose_name='featureflag')),
                ('functionflag', models.CharField(blank=True, max_length=20, null=True, verbose_name='functionflag')),
                ('department', models.CharField(blank=True, max_length=50, null=True, verbose_name='department')),
                ('admin', models.SmallIntegerField(null=True, verbose_name='admin')),
                ('expiry', models.DateTimeField(null=True, verbose_name='expiry')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
